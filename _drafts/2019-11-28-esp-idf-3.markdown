---
layout: post
title:  "ESP-IDF 3：使用RMT以实现2812驱动程序"
date:   2019-11-01 17:00:00 +0000
categories: [HW, SW]
excerpt: "???"
---
利用FreeRTOS为了控制一个LED、办理一个按键虽然很好玩，但我们应该利用FreeRTOS和ESP32的能力为了构建更复杂项目，同时我们最好探索一个新I/O方法。我们会利用WS2812智能外控集成LED光源，从起点实现控制驱动代码；一开始使用最简单方法，即随着2812指南，接下来把该简单代码改善、最终把该一步一步来、“面条式”代码代替利用ESP32提供的RMT的程序。

## 2812 LED元件
我们以每一个2812 LED元件为一个像素，每一个像素都包含一个输入、一个输出；进行时像素从输入读取24个比特，把剩下输入发到它的输出；在一般情况下，把第一个2812输出连接到第二个2812的输入，这样可以把几个2812连接在一起。为了控制该2812串，只需要把足够个信号发给第一个输入去。足够信号是多少--每一个像素、每一个2812会消费$$8*3$$比特：每一个颜色需要8比特；因此如果我们把$$n$$个2812元件串起来，我们需要把$$n*3$$比特发到第一个2812的输入去。2818协议也特别简单，除了复位以外，像素只需要接到28个“1”或者“0”信号，没有任何控制信号、控制结构；如果有几个串起来的2812，只需要重复该控制颜色的比特顺序即可。

所以，为了控制一个2812LED我们需要在$$30μs$$的时间内发到24比特，每一个比特都要$$1250ns$$的时间。

![黑丝](/assets/2019-11-30-esp-idf-3/none.png)
![红四](/assets/2019-11-30-esp-idf-3/red.png)

2812 LED元件的智能、包含控制电路的LED

(视频)

这个帖子中我们来探索怎么加上

R: `000000001111111100000000`
N: `000000000000000000000000`


|G7-G0|R7-R0|B7-B0|
|---|:---|:---:|
|0|1|0|
|0|0|0|